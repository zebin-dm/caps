import os
import collections
import numpy as np

class DataAnalysis(object):
    def __init__(self, root) -> None:
        self.root = root
        self.image_info = self.read_data()

    def read_data(self):       
        images = {}
        Image = collections.namedtuple(
            "Image", ["name", "w", "h", "fx", "fy", "cx", "cy", "rvec", "tvec"])
        for scene_id in os.listdir(self.root):
            densefs = [f for f in os.listdir(os.path.join(self.root, scene_id))
                        if 'dense' in f and os.path.isdir(os.path.join(self.root, scene_id, f))]
            for densef in densefs:
                folder = os.path.join(self.root, scene_id, densef, 'aligned')
                img_cam_txt_path = os.path.join(folder, 'img_cam.txt')
                with open(img_cam_txt_path, "r") as fid:
                    while True:
                        line = fid.readline()
                        if not line:
                            break
                        line = line.strip()
                        if len(line) > 0 and line[0] != "#":
                            elems = line.split()
                            image_name = elems[0]
                            img_path = os.path.join(folder, 'images', image_name)
                            w, h = int(elems[1]), int(elems[2])
                            fx, fy = float(elems[3]), float(elems[4])
                            cx, cy = float(elems[5]), float(elems[6])
                            R = np.array(elems[7:16])
                            T = np.array(elems[16:19])
                            images[img_path] = Image(
                                name=image_name, w=w, h=h, fx=fx, fy=fy, cx=cx, cy=cy, rvec=R, tvec=T
                            )
        return images


if __name__ == "__main__":
    data_path = "/home/dm/work/04.dataset/CAPS-MegaDepth-release-light"

    data_analysis_ins = DataAnalysis(root=data_path)
    
